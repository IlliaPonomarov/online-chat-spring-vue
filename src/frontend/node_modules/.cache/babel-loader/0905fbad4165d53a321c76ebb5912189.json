{"ast":null,"code":"import { createElementVNode as _createElementVNode, withModifiers as _withModifiers, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  id: \"main-content\",\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\nconst _hoisted_3 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_4 = {\n  class: \"form-inline\"\n};\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"connect\"\n}, \"WebSocket connection:\", -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = [\"disabled\"];\nconst _hoisted_8 = [\"disabled\"];\nconst _hoisted_9 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_10 = {\n  class: \"form-inline\"\n};\nconst _hoisted_11 = {\n  class: \"form-group\"\n};\n\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"name\"\n}, \"What is your name?\", -1\n/* HOISTED */\n);\n\nconst _hoisted_13 = {\n  class: \"row\"\n};\nconst _hoisted_14 = {\n  class: \"col-md-12\"\n};\nconst _hoisted_15 = {\n  id: \"conversation\",\n  class: \"table table-striped\"\n};\n\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Greetings\")])], -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"form\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _createElementVNode(\"button\", {\n    id: \"connect\",\n    class: \"btn btn-default\",\n    type: \"submit\",\n    disabled: $data.connected == true,\n    onClick: _cache[0] || (_cache[0] = _withModifiers((...args) => $options.connect && $options.connect(...args), [\"prevent\"]))\n  }, \"Connect\", 8\n  /* PROPS */\n  , _hoisted_7), _createElementVNode(\"button\", {\n    id: \"disconnect\",\n    class: \"btn btn-default\",\n    type: \"submit\",\n    disabled: $data.connected == false,\n    onClick: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.disconnect && $options.disconnect(...args), [\"prevent\"]))\n  }, \"Disconnect \", 8\n  /* PROPS */\n  , _hoisted_8)])])]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"form\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_hoisted_12, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.send_message = $event),\n    placeholder: \"Your name here...\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.send_message]])]), _createElementVNode(\"button\", {\n    id: \"send\",\n    class: \"btn btn-default\",\n    type: \"submit\",\n    onClick: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.send && $options.send(...args), [\"prevent\"]))\n  }, \"Send\")])])]), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"table\", _hoisted_15, [_hoisted_16, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.received_messages, item => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: item\n    }, [_createElementVNode(\"td\", null, _toDisplayString(item), 1\n    /* TEXT */\n    )]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])])])])]);\n}","map":{"version":3,"mappings":"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","names":["id","class","_createElementVNode","for","_createElementBlock","_hoisted_6","type","disabled","$data","onClick","$options","_hoisted_7","_hoisted_8","_hoisted_12","$event","placeholder","_hoisted_16","_Fragment","_renderList","item","key","_toDisplayString"],"sourceRoot":"","sources":["C:\\Users\\hp\\IdeaProjects\\chat-vue-spring\\src\\frontend-chat\\src\\components\\WebSocketGreetings.vue"],"sourcesContent":["  <template>\r\n  <div>\r\n    <div id=\"main-content\" class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n          <form class=\"form-inline\">\r\n            <div class=\"form-group\">\r\n              <label for=\"connect\">WebSocket connection:</label>\r\n              <button id=\"connect\" class=\"btn btn-default\" type=\"submit\" :disabled=\"connected == true\" @click.prevent=\"connect\">Connect</button>\r\n              <button id=\"disconnect\" class=\"btn btn-default\" type=\"submit\" :disabled=\"connected == false\" @click.prevent=\"disconnect\">Disconnect\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <form class=\"form-inline\">\r\n            <div class=\"form-group\">\r\n              <label for=\"name\">What is your name?</label>\r\n              <input type=\"text\" id=\"name\" class=\"form-control\" v-model=\"send_message\" placeholder=\"Your name here...\">\r\n            </div>\r\n            <button id=\"send\" class=\"btn btn-default\" type=\"submit\" @click.prevent=\"send\">Send</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <table id=\"conversation\" class=\"table table-striped\">\r\n            <thead>\r\n            <tr>\r\n              <th>Greetings</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <tr v-for=\"item in received_messages\" :key=\"item\">\r\n              <td>{{ item }}</td>\r\n            </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport SockJS from \"sockjs-client\";\r\nimport Stomp from \"webstomp-client\";\r\nexport default {\r\n  name: \"web-socket-demo\",\r\n  data() {\r\n    return {\r\n      received_messages: [],\r\n      send_message: null,\r\n      connected: false\r\n    };\r\n  },\r\n  methods: {\r\n    send() {\r\n      console.log(\"Send message:\" + this.send_message);\r\n      if (this.stompClient && this.stompClient.connected) {\r\n        const msg = { name: this.send_message };\r\n        console.log(JSON.stringify(msg));\r\n        this.stompClient.send(\"/app/hello\", JSON.stringify(msg), {});\r\n      }\r\n    },\r\n    connect() {\r\n      this.socket = new SockJS(\"http://localhost:8022/gs-guide-websocket\");\r\n      this.stompClient = Stomp.over(this.socket);\r\n      this.stompClient.connect(\r\n          {},\r\n          frame => {\r\n            this.connected = true;\r\n            console.log(frame);\r\n            this.stompClient.subscribe(\"/topic/greetings\", tick => {\r\n              console.log(tick);\r\n              this.received_messages.push(JSON.parse(tick.body).content);\r\n            });\r\n          },\r\n          error => {\r\n            console.log(error);\r\n            this.connected = false;\r\n          }\r\n      );\r\n    },\r\n    disconnect() {\r\n      if (this.stompClient) {\r\n        this.stompClient.disconnect();\r\n      }\r\n      this.connected = false;\r\n    },\r\n    tickleConnection() {\r\n      this.connected ? this.disconnect() : this.connect();\r\n    }\r\n  },\r\n  mounted() {\r\n    this.connect();\r\n  }\r\n};\r\n</script>\r\n<style scoped=\"\">\r\n</style><style class=\"darkreader darkreader--sync\" media=\"screen\"></style>"]},"metadata":{},"sourceType":"module"}