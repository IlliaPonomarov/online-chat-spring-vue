{"ast":null,"code":"const API_CHAT = \"http://localhost:8022/api/chats\";\n\nconst axios = require('axios').default;\n\nclass ChatService {\n  async getAllChats() {\n    let test = [];\n    test = await axios.get(API_CHAT + \"/\", {\n      headers: {\n        Authorization: localStorage.getItem(\"Authorization\")\n      }\n    }); // .then(response => {\n    //\n    //         for (let i = 0; i < response.data.length ; i++) {\n    //\n    //             let dataChat = {\n    //                 id: response.data[i].id,\n    //                 title: response.data[i].title,\n    //                 messageTime: response.data[i].messageTime,\n    //                 lastMessage: response.data[i].lastMessage,\n    //                 messageCount: response.data[i].messageCount,\n    //                 personList: response.data[i].personList,\n    //                 messages: response.data[i].messages,\n    //             };\n    //\n    //             test.push(dataChat)\n    //         }\n    //     }).catch(error => alert(error));\n\n    return test;\n  }\n\n}\n\nexport default new ChatService();","map":{"version":3,"names":["API_CHAT","axios","require","default","ChatService","getAllChats","test","get","headers","Authorization","localStorage","getItem"],"sources":["C:/Users/hp/IdeaProjects/online-chat-spring-vue/src/frontend/src/services/chat.service.js"],"sourcesContent":["const API_CHAT = \"http://localhost:8022/api/chats\";\r\nconst axios = require('axios').default;\r\n\r\n\r\nclass ChatService {\r\n    async getAllChats(){\r\n\r\n        let test = [];\r\n        test =  await axios.get(API_CHAT + \"/\",\r\n              {headers: {Authorization: localStorage.getItem(\"Authorization\")}}\r\n          );\r\n\r\n    // .then(response => {\r\n    //\r\n    //         for (let i = 0; i < response.data.length ; i++) {\r\n    //\r\n    //             let dataChat = {\r\n    //                 id: response.data[i].id,\r\n    //                 title: response.data[i].title,\r\n    //                 messageTime: response.data[i].messageTime,\r\n    //                 lastMessage: response.data[i].lastMessage,\r\n    //                 messageCount: response.data[i].messageCount,\r\n    //                 personList: response.data[i].personList,\r\n    //                 messages: response.data[i].messages,\r\n    //             };\r\n    //\r\n    //             test.push(dataChat)\r\n    //         }\r\n    //     }).catch(error => alert(error));\r\n\r\n        return test;\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default new ChatService();"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,iCAAjB;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AAGA,MAAMC,WAAN,CAAkB;EACG,MAAXC,WAAW,GAAE;IAEf,IAAIC,IAAI,GAAG,EAAX;IACAA,IAAI,GAAI,MAAML,KAAK,CAACM,GAAN,CAAUP,QAAQ,GAAG,GAArB,EACR;MAACQ,OAAO,EAAE;QAACC,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,eAArB;MAAhB;IAAV,CADQ,CAAd,CAHe,CAOnB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEI,OAAOL,IAAP;EAEH;;AA5Ba;;AAkClB,eAAe,IAAIF,WAAJ,EAAf"},"metadata":{},"sourceType":"module"}