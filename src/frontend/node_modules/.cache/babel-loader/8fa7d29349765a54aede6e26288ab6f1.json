{"ast":null,"code":"import axios from \"axios\";\nconst API_CHAT = \"http://localhost:8022/api/chats\";\n\nclass ChatService {\n  getAllChats() {\n    let test = [];\n    axios.get(API_CHAT + \"/\", {\n      headers: {\n        Authorization: localStorage.getItem(\"Authorization\")\n      }\n    }).then(response => {\n      for (let i = 0; i < response.data.length; i++) {\n        let dataChat = {\n          id: response.data[i].id,\n          title: response.data[i].title,\n          messageTime: response.data[i].messageTime,\n          lastMessage: response.data[i].lastMessage,\n          messageCount: response.data[i].messageCount,\n          personList: response.data[i].personList,\n          messages: response.data[i].messages\n        };\n        test.push(dataChat);\n      }\n    }).catch(error => alert(error));\n    return test;\n  }\n\n}\n\nexport default new ChatService();","map":{"version":3,"names":["axios","API_CHAT","ChatService","getAllChats","test","get","headers","Authorization","localStorage","getItem","then","response","i","data","length","dataChat","id","title","messageTime","lastMessage","messageCount","personList","messages","push","catch","error","alert"],"sources":["C:/Users/hp/IdeaProjects/online-chat-spring-vue/src/frontend/src/services/chat.service.js"],"sourcesContent":["import axios from \"axios\";\r\nconst API_CHAT = \"http://localhost:8022/api/chats\";\r\nclass ChatService {\r\n    getAllChats(){\r\n\r\n          let test = [];\r\n          axios.get(API_CHAT + \"/\",\r\n              {headers: {Authorization: localStorage.getItem(\"Authorization\")}}\r\n          ).then(response => {\r\n\r\n              for (let i = 0; i < response.data.length ; i++) {\r\n\r\n                  let dataChat = {\r\n                      id: response.data[i].id,\r\n                      title: response.data[i].title,\r\n                      messageTime: response.data[i].messageTime,\r\n                      lastMessage: response.data[i].lastMessage,\r\n                      messageCount: response.data[i].messageCount,\r\n                      personList: response.data[i].personList,\r\n                      messages: response.data[i].messages,\r\n                  };\r\n\r\n                  test.push(dataChat)\r\n              }\r\n          }).catch(error => alert(error));\r\n\r\n      return test;\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default new ChatService();"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,QAAQ,GAAG,iCAAjB;;AACA,MAAMC,WAAN,CAAkB;EACdC,WAAW,GAAE;IAEP,IAAIC,IAAI,GAAG,EAAX;IACAJ,KAAK,CAACK,GAAN,CAAUJ,QAAQ,GAAG,GAArB,EACI;MAACK,OAAO,EAAE;QAACC,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,eAArB;MAAhB;IAAV,CADJ,EAEEC,IAFF,CAEOC,QAAQ,IAAI;MAEf,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,QAAQ,CAACE,IAAT,CAAcC,MAAlC,EAA2CF,CAAC,EAA5C,EAAgD;QAE5C,IAAIG,QAAQ,GAAG;UACXC,EAAE,EAAEL,QAAQ,CAACE,IAAT,CAAcD,CAAd,EAAiBI,EADV;UAEXC,KAAK,EAAEN,QAAQ,CAACE,IAAT,CAAcD,CAAd,EAAiBK,KAFb;UAGXC,WAAW,EAAEP,QAAQ,CAACE,IAAT,CAAcD,CAAd,EAAiBM,WAHnB;UAIXC,WAAW,EAAER,QAAQ,CAACE,IAAT,CAAcD,CAAd,EAAiBO,WAJnB;UAKXC,YAAY,EAAET,QAAQ,CAACE,IAAT,CAAcD,CAAd,EAAiBQ,YALpB;UAMXC,UAAU,EAAEV,QAAQ,CAACE,IAAT,CAAcD,CAAd,EAAiBS,UANlB;UAOXC,QAAQ,EAAEX,QAAQ,CAACE,IAAT,CAAcD,CAAd,EAAiBU;QAPhB,CAAf;QAUAlB,IAAI,CAACmB,IAAL,CAAUR,QAAV;MACH;IACJ,CAlBD,EAkBGS,KAlBH,CAkBSC,KAAK,IAAIC,KAAK,CAACD,KAAD,CAlBvB;IAoBJ,OAAOrB,IAAP;EAED;;AA1Ba;;AAgClB,eAAe,IAAIF,WAAJ,EAAf"},"metadata":{},"sourceType":"module"}