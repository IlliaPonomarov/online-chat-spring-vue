{"ast":null,"code":"import SockJS from \"sockjs-client\";\nimport Stomp from \"webstomp-client\";\nexport default {\n  name: \"web-socket-demo\",\n\n  data() {\n    return {\n      received_messages: [],\n      send_message: null,\n      connected: false\n    };\n  },\n\n  methods: {\n    send() {\n      console.log(\"Send message:\" + this.send_message);\n\n      if (this.stompClient && this.stompClient.connected) {\n        const msg = {\n          name: this.send_message\n        };\n        console.log(JSON.stringify(msg));\n        this.stompClient.send(\"/app/hello\", JSON.stringify(msg), {});\n      }\n    },\n\n    connect() {\n      this.socket = new SockJS(\"http://localhost:8022/gs-guide-websocket\");\n      this.stompClient = Stomp.over(this.socket);\n      this.stompClient.connect({}, frame => {\n        this.connected = true;\n        console.log(frame);\n        this.stompClient.subscribe(\"/topic/greetings\", tick => {\n          console.log(tick);\n          this.received_messages.push(JSON.parse(tick.body).content);\n        });\n      }, error => {\n        console.log(error);\n        this.connected = false;\n      });\n    },\n\n    disconnect() {\n      if (this.stompClient) {\n        this.stompClient.disconnect();\n      }\n\n      this.connected = false;\n    },\n\n    tickleConnection() {\n      this.connected ? this.disconnect() : this.connect();\n    }\n\n  },\n\n  mounted() {\n    this.connect();\n  }\n\n};","map":{"version":3,"mappings":"AA4CA,OAAOA,MAAP,MAAmB,eAAnB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,eAAe;EACbC,IAAI,EAAE,iBADO;;EAEbC,IAAI,GAAG;IACL,OAAO;MACLC,iBAAiB,EAAE,EADd;MAELC,YAAY,EAAE,IAFT;MAGLC,SAAS,EAAE;IAHN,CAAP;EAKD,CARY;;EASbC,OAAO,EAAE;IACPC,IAAI,GAAG;MACLC,OAAO,CAACC,GAAR,CAAY,kBAAkB,KAAKL,YAAnC;;MACA,IAAI,KAAKM,WAAL,IAAoB,KAAKA,WAAL,CAAiBL,SAAzC,EAAoD;QAClD,MAAMM,GAAE,GAAI;UAAEV,IAAI,EAAE,KAAKG;QAAb,CAAZ;QACAI,OAAO,CAACC,GAAR,CAAYG,IAAI,CAACC,SAAL,CAAeF,GAAf,CAAZ;QACA,KAAKD,WAAL,CAAiBH,IAAjB,CAAsB,YAAtB,EAAoCK,IAAI,CAACC,SAAL,CAAeF,GAAf,CAApC,EAAyD,EAAzD;MACF;IACD,CARM;;IASPG,OAAO,GAAG;MACR,KAAKC,MAAL,GAAc,IAAIhB,MAAJ,CAAW,0CAAX,CAAd;MACA,KAAKW,WAAL,GAAmBV,KAAK,CAACgB,IAAN,CAAW,KAAKD,MAAhB,CAAnB;MACA,KAAKL,WAAL,CAAiBI,OAAjB,CACI,EADJ,EAEIG,KAAI,IAAK;QACP,KAAKZ,SAAL,GAAiB,IAAjB;QACAG,OAAO,CAACC,GAAR,CAAYQ,KAAZ;QACA,KAAKP,WAAL,CAAiBQ,SAAjB,CAA2B,kBAA3B,EAA+CC,IAAG,IAAK;UACrDX,OAAO,CAACC,GAAR,CAAYU,IAAZ;UACA,KAAKhB,iBAAL,CAAuBiB,IAAvB,CAA4BR,IAAI,CAACS,KAAL,CAAWF,IAAI,CAACG,IAAhB,EAAsBC,OAAlD;QACD,CAHD;MAID,CATL,EAUIC,KAAI,IAAK;QACPhB,OAAO,CAACC,GAAR,CAAYe,KAAZ;QACA,KAAKnB,SAAL,GAAiB,KAAjB;MACF,CAbJ;IAeD,CA3BM;;IA4BPoB,UAAU,GAAG;MACX,IAAI,KAAKf,WAAT,EAAsB;QACpB,KAAKA,WAAL,CAAiBe,UAAjB;MACF;;MACA,KAAKpB,SAAL,GAAiB,KAAjB;IACD,CAjCM;;IAkCPqB,gBAAgB,GAAG;MACjB,KAAKrB,SAAL,GAAiB,KAAKoB,UAAL,EAAjB,GAAqC,KAAKX,OAAL,EAArC;IACF;;EApCO,CATI;;EA+Cba,OAAO,GAAG;IACR,KAAKb,OAAL;EACF;;AAjDa,CAAf","names":["SockJS","Stomp","name","data","received_messages","send_message","connected","methods","send","console","log","stompClient","msg","JSON","stringify","connect","socket","over","frame","subscribe","tick","push","parse","body","content","error","disconnect","tickleConnection","mounted"],"sourceRoot":"","sources":["C:\\Users\\hp\\IdeaProjects\\online-chat-spring-vue\\src\\frontend\\src\\components\\WebSocketGreetings.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div id=\"main-content\" class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n          <form class=\"form-inline\">\r\n            <div class=\"form-group\">\r\n              <label for=\"connect\">WebSocket connection:</label>\r\n              <button id=\"connect\" class=\"btn btn-default\" type=\"submit\" :disabled=\"connected == true\" @click.prevent=\"connect\">Connect</button>\r\n              <button id=\"disconnect\" class=\"btn btn-default\" type=\"submit\" :disabled=\"connected == false\" @click.prevent=\"disconnect\">Disconnect\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <form class=\"form-inline\">\r\n            <div class=\"form-group\">\r\n              <label for=\"name\">What is your name?</label>\r\n              <input type=\"text\" id=\"name\" class=\"form-control\" v-model=\"send_message\" placeholder=\"Your name here...\">\r\n            </div>\r\n            <button id=\"send\" class=\"btn btn-default\" type=\"submit\" @click.prevent=\"send\">Send</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <table id=\"conversation\" class=\"table table-striped\">\r\n            <thead>\r\n            <tr>\r\n              <th>Greetings</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <tr v-for=\"item in received_messages\" :key=\"item\">\r\n              <td>{{ item }}</td>\r\n            </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport SockJS from \"sockjs-client\";\r\nimport Stomp from \"webstomp-client\";\r\nexport default {\r\n  name: \"web-socket-demo\",\r\n  data() {\r\n    return {\r\n      received_messages: [],\r\n      send_message: null,\r\n      connected: false\r\n    };\r\n  },\r\n  methods: {\r\n    send() {\r\n      console.log(\"Send message:\" + this.send_message);\r\n      if (this.stompClient && this.stompClient.connected) {\r\n        const msg = { name: this.send_message };\r\n        console.log(JSON.stringify(msg));\r\n        this.stompClient.send(\"/app/hello\", JSON.stringify(msg), {});\r\n      }\r\n    },\r\n    connect() {\r\n      this.socket = new SockJS(\"http://localhost:8022/gs-guide-websocket\");\r\n      this.stompClient = Stomp.over(this.socket);\r\n      this.stompClient.connect(\r\n          {},\r\n          frame => {\r\n            this.connected = true;\r\n            console.log(frame);\r\n            this.stompClient.subscribe(\"/topic/greetings\", tick => {\r\n              console.log(tick);\r\n              this.received_messages.push(JSON.parse(tick.body).content);\r\n            });\r\n          },\r\n          error => {\r\n            console.log(error);\r\n            this.connected = false;\r\n          }\r\n      );\r\n    },\r\n    disconnect() {\r\n      if (this.stompClient) {\r\n        this.stompClient.disconnect();\r\n      }\r\n      this.connected = false;\r\n    },\r\n    tickleConnection() {\r\n      this.connected ? this.disconnect() : this.connect();\r\n    }\r\n  },\r\n  mounted() {\r\n    this.connect();\r\n  }\r\n};\r\n</script>\r\n<style scoped=\"\">\r\n</style><style class=\"darkreader darkreader--sync\" media=\"screen\"></style>"]},"metadata":{},"sourceType":"module"}